@model Web.ViewModels.Booking.SelectTicketViewModel

@{
    ViewData["Title"] = "Chọn Vé";
    Layout = "_BookingLayout";
}
@section Styles {
    <link rel="stylesheet" href="~/css/select-ticket.css" />
}

<div class="container ticket-list-container">
    <form method="post" asp-controller="Booking" asp-action="SelectTicket" asp-route-id="@Model.EventId">
        <div class="row">
            <div class="col-lg-9 col-md-12 col-left">
                <h2 class="event-title">@Model.EventTitle</h2>
                <div class="event-info">
                    <p><strong>Ngày:</strong> @Model.EventDate</p>
                    <p><strong>Địa điểm:</strong> @Model.EventLocation</p>
                </div>
                @if (!string.IsNullOrEmpty(Model.EventImage))
                {
                    <img src="@Model.EventImage" alt="Hình ảnh sự kiện" class="img-fluid mb-3 event-image" />
                }
                <hr />
                @for (var i = 0; i < Model.TicketTypes.Count; i++)
                {
                    <div class="ticket-card">
                        <h5 class="ticket-type-title">@Model.TicketTypes[i].Title</h5>
                        <p class="ticket-description">@Model.TicketTypes[i].Description</p>

                        <div class="ticket-features">
                            <div class="feature-item">
                                <span class="sale-status">@Model.TicketTypes[i].SaleStatus</span>
                            </div>
                            @if (!Model.TicketTypes[i].IsSoldOut)
                            {
                                <div class="feature-item">
                                    <span>Còn lại: @Model.TicketTypes[i].RemainingQuantity vé</span>
                                </div>
                                <div class="feature-item">
                                    <span>Tối đa mỗi người: @Model.TicketTypes[i].MaxPerPerson vé</span>
                                </div>
                            }
                        </div>

                        <div class="d-flex justify-content-between align-items-center mt-3">
                            <span class="ticket-price">@Model.TicketTypes[i].FormattedPrice</span>

                            @if (!Model.TicketTypes[i].IsSoldOut)
                            {
                                <div class="quantity-controls">
                                    <button type="button" class="btn btn-outline-secondary btn-circle" onclick="decrementQuantity(@Model.TicketTypes[i].Id)" @(Model.TicketTypes[i].QuantityBuy <= 0 ? "disabled" : "")> - </button>
                                    <input type="number" class="form-control quantity-input text-center" id="quantity-@Model.TicketTypes[i].Id" value="@Model.TicketTypes[i].QuantityBuy" min="0" max="@Model.TicketTypes[i].MaxPerPerson" data-ticket-id="@Model.TicketTypes[i].Id" onchange="updateQuantity(@Model.TicketTypes[i].Id)" readonly />
                                    <button type="button" class="btn btn-outline-secondary btn-circle" onclick="incrementQuantity(@Model.TicketTypes[i].Id)" @(Model.TicketTypes[i].QuantityBuy >= Model.TicketTypes[i].MaxPerPerson ? "disabled" : "")> + </button>
                                </div>
                            }
                        </div>
                        <input type="hidden" name="TicketTypes[@i].Id" value="@Model.TicketTypes[i].Id" />
                        <input type="hidden" name="TicketTypes[@i].QuantityBuy" id="hidden-quantity-@Model.TicketTypes[i].Id" value="@Model.TicketTypes[i].QuantityBuy" />
                    </div>
                }
            </div>
            <div class="col-lg-3 col-md-12 col-right">
                <div class="summary-card">
                    <h3 class="summary-title mb-3">Tổng quan</h3>
                    <div class="summary-content">
                        <p class="summary-event"><strong>Sự kiện:</strong> @Model.EventTitle</p>
                        <hr />
                        <div id="summary-items">
                            @* Summary items will be updated using JavaScript *@
                        </div>
                    </div>
                    <div class="summary-footer">
                        <p><strong id="total-price">Tổng cộng: 0 VNĐ</strong></p>
                        <button class="btn btn-primary btn-block" id="checkout-btn" type="submit" disabled>Thanh toán</button>
                    </div>
                </div>
            </div>
        </div>
    </form>
</div>

@section Scripts {
    <script src="https://kit.fontawesome.com/a076d05399.js"></script>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            updateSummary(); // Initial summary update
        });

        function updateQuantity(ticketId) {
            var quantityInput = document.getElementById('quantity-' + ticketId);
            var quantity = parseInt(quantityInput.value);

            if (isNaN(quantity) || quantity < 0) {
                quantity = 0;
            }

            quantityInput.value = quantity; // Update value to ensure it is not invalid
            var hiddenQuantity = document.getElementById('hidden-quantity-' + ticketId);
            hiddenQuantity.value = quantity;

            // Update buttons
            updateButtonState(ticketId, quantity);
            updateSummary();
        }

        function incrementQuantity(ticketId) {
            var quantityInput = document.getElementById('quantity-' + ticketId);
            var currentQuantity = parseInt(quantityInput.value);
            var maxQuantity = parseInt(quantityInput.getAttribute('max'));

            if (currentQuantity < maxQuantity) {
                quantityInput.value = currentQuantity + 1;
                updateQuantity(ticketId);
            }
        }

        function decrementQuantity(ticketId) {
            var quantityInput = document.getElementById('quantity-' + ticketId);
            var currentQuantity = parseInt(quantityInput.value);

            if (currentQuantity > 0) {
                quantityInput.value = currentQuantity - 1;
                updateQuantity(ticketId);
            }
        }

        function updateButtonState(ticketId, quantity) {
            const quantityInput = document.getElementById('quantity-' + ticketId);
            const maxQuantity = parseInt(quantityInput.getAttribute('max'));
            const decrementButton = quantityInput.previousElementSibling;
            const incrementButton = quantityInput.nextElementSibling;

            decrementButton.disabled = quantity <= 0;
            incrementButton.disabled = quantity >= maxQuantity;
        }

        function updateSummary() {
            var summaryItemsContainer = document.getElementById('summary-items');
            var totalPriceElement = document.getElementById('total-price');
            var checkoutButton = document.getElementById('checkout-btn');
            summaryItemsContainer.innerHTML = '';
            var total = 0;
            var hasTickets = false;

            var ticketTypes = @Html.Raw(Json.Serialize(Model.TicketTypes));

            ticketTypes.forEach(ticketType => {
                var quantityInput = document.getElementById('quantity-' + ticketType.id);
                if (quantityInput) {
                    var quantity = parseInt(quantityInput.value);
                    if (quantity > 0) {
                        hasTickets = true;
                        var subtotal = ticketType.price * quantity;
                        total += subtotal;
                        summaryItemsContainer.innerHTML += `<p>${ticketType.title} x ${quantity}: ${subtotal.toLocaleString('vi-VN')} VNĐ</p>`;
                    }
                }
            });

            totalPriceElement.textContent = 'Tổng cộng: ' + total.toLocaleString('vi-VN') + ' VNĐ';
            checkoutButton.disabled = !hasTickets;
        }
    </script>
}